import tenseal as ts

# 1. Context aanmaken voor CKKS homomorphic encryption
context = ts.context(
    ts.SCHEME_TYPE.CKKS, poly_modulus_degree=8192, coeff_mod_bit_sizes=[60, 40, 40, 60]
)
context.global_scale = 2**40  # Schaalfactor instellen voor precisie
context.generate_galois_keys()  # Voor optellingen en rotaties

# 2. Encryptie van de getallen 75 en 326
enc_num1 = ts.ckks_vector(context, [75])
enc_num2 = ts.ckks_vector(context, [326])

# 3. Homomorf optellen van de twee versleutelde getallen
enc_result = enc_num1 + enc_num2

# 4. Decryptie van het resultaat
result = enc_result.decrypt()

# 5. Afronden naar het dichtstbijzijnde gehele getal
rounded_result = round(result[0])

# 6. Printen van de correcte som
print(f"De som is: {rounded_result}")
